Apache 2.4 x64 nginx 1.14
PHP 7.3 x64
Mysql 8.0 x64
----------------

при отрисовке списка, формы, и при сохранении поставил usleep(100000), иначе совершенно мгновенно, прелоудеры не видно

Проект написан полностью с нуля, работал где-то полтора дня.
Для удобства накидал мини-mvc фреймворк.

Где-то возможны шероховатости в архитектуре и системе mvc, не стал тратить время. Сконцентрировался на основной задаче.

Начал писать, придерживаясь DDD, но решил работать через DAL-менеджеров - тем более, в задании предлагается держаться ооп-подхода как можно ближе. Можно было реализовать всё проще, но архитектура с поставщиками, как мне кажется, более показательна в контексте ооп.

Есть 3 основные сущности:
    - Товар (Product)
    - Категория (Category)
    - Свойство (Prop) // типа АВТОР, или ШИРИНА

Свойства решил хранить в базе как, просто, якобы "задел на будущее" (когда свойства категорий будут админиться)

Для этих 3х сущностей реализовал механизм поставщиков (ну, или менеджеров).
/app/lib/managers/ProductManager
                 /CategoryManager
                 /PropManager

Менеджеры обращаются к DAL-агентам (у всех есть только Mysql-агент):
/app/lib/managers/agents/mysql/MysqlProductManager
                              /MysqlCategoryManager
                              /MysqlPropManager

 Для категории реализован ещё альтернативный агент:
 /app/lib/managers/agents/other/HardcodeCategoryManager.php
 Сменить агента для КАТЕГОРИИ можно в app/config.php в ключе ['entityManagers']['category'] - см. закоментенную строчку
 Можете изменить, агент сменится, логика останется (после изменения у категорий в названии появится "(hardcode)").

--------------------------------------------------------

В форме редактирования можно было вывести все дополнительные поля всех категорий, и скрывать/отображать в зависимости от выбранной.
Но я решил отталкиваться от мысли, что полей может быть 500, и тогда это не вариант. Поэтому грузятся динамически.

Также не удалось забиндить поля, подгруженные динамически к модели Vue, поэтому беру данные не из состояния Vue-объекта, а просто из формы. Не стал тратить время на это.

Также многие яваскрипты не вполне оптимальны - можно было написать какие-то обёртки для системы алёртов, но тоже не стал тратить на это время - суть этого задания, как мне кажется, в другом - в том числе и скорости написания. В боевом проекте.

Это же касается проверки формы на клиенте - можно продублировать правила валидации с сервера в js, валидировать на клиенте, но также не стал тратить на это время, по той же причине.






